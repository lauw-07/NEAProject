@inject Models.PolygonData.PolygonDataLoader polygonDataLoader;
@inject Models.Database.DatabaseHandler databaseHandler;
@inject IJSRuntime Js;

<section id="graph-container" class="child">
    <div class="graph-headers">
        <div class="dropdown-inputs">
            <div class="dropdown-toggle">
                <span>Get new data</span>
                <span class="e-icons e-chevron-down"></span>
            </div>

            <div class="inputs">
                <div class="input-row">
                    <label for="ticker">Ticker:</label>
                    <input type="text" id="ticker" placeholder="Ticker" required />
                </div>

                <div class="input-row">
                    <label for="multiplier">Multiplier:</label>
                    <input type="number" id="multiplier" placeholder="Multiplier" required />
                </div>

                <div class="input-row">
                    <label for="timespan">Timespan:</label>
                    <input type="text" id="timespan" placeholder="Timespan" required />
                </div>

                <div class="input-row">
                    <label for="dateFrom">Date From:</label>
                    <input type="date" id="dateFrom" required />
                </div>

                <div class="input-row">
                    <label for="dateTo">Date To:</label>
                    <input type="date" id="dateTo" required />
                </div>

                <button @onclick="FetchData">Load Data</button>
            </div>
        </div>

        <div class="dropdown-menu">
            <div class="select-btn">
                <span class="selectBtn-text">Graph Details</span>
                <span class="e-icons e-chevron-down"></span>
            </div>
            <div class="options">
                <div class="option">
                    <span class="option-text-title">Instrument:</span>
                    <span class="option-text">@(SelectedInstrument == null ? "Stocks" : SelectedInstrument)</span>
                </div>
                <div class="option">
                    <span class="option-text-title">Security:</span>
                    <span class="option-text">@(SelectedSecurity == null ? "Apple" : SelectedSecurity)</span>
                </div>
                <div class="option">
                    <span class="option-text-title">Indicators:</span>
                    <div class="indicator-list">
                        @foreach (string indicator in _selectedIndicatorList) {
                            <div class="option-text">@indicator</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Maybe add paramters into the graph component depending on what the user wants
        This would also mean that a parameter needs to be passed in from inputs made in the topbar component as well as the sidebar component
    -->

    @if (TimeseriesParam != null && TimeseriesParam.Size() > 0) {
        <Graph
            Timeseries="@TimeseriesParam" 
            IndicatorTS="@IndicatorTSParameter"
            @rendermode="InteractiveServer" />
    }
    

</section>

@code {

}
